#include <Wire.h>
#include "ESP8266WiFi.h"
#include <ArduinoJson.h>

#define I2C_SDL D1
#define I2C_SDA D2
unsigned int teller = 0;
unsigned int outputs = 0;
unsigned long timerStartTime = 0;
unsigned long timerDuration = 10000; // Set the timer duration in milliseconds (10 seconds)
const int resistorValue = 10000;  // Resistor value in ohms (e.g., 10k ohms at room temperature)
unsigned int tempsensor = 0;
unsigned int readAnalogSensor(int ANALOG_CH);
const int switchPin = 2;     // DI 0 - Connect switch to digital pin 2
const int fanPin = 4;        // DO 4 - Connect fan to digital pin 4
const int peltierPin = 5;    // D5 - Connect Peltier to digital pin 5
const int ntcPin0 = 0;       // AI 0 - Connect NTC 0 to analog pin A0
const int ntcPin1 = 1;       // AI 1 - Connect NTC 1 to analog pin A1
const int thresholdTemperature = 25;  // Adjust the threshold temperature as needed

const char* ssid = "piloveswemos";
const char* password = "hakimhakimhakim";
WiFiServer server(8081);

IPAddress ip(192, 168, 137, 249);    // Static IP setup
IPAddress gateway(192, 168, 137, 1); // Gateway setup
IPAddress subnet(255, 255, 0, 0);     // Subnet setup

void activateFan() {
  Serial.println("Activate Fan");
  Wire.beginTransmission(0x38);
  Wire.write(byte(0x03));
  Wire.write(byte(0x1F));
  Wire.endTransmission();
}

void setup() {
  Serial.begin(9600);
  delay(10);
  pinMode(switchPin, INPUT);
  pinMode(D4, OUTPUT);
  pinMode(peltierPin, OUTPUT);
  Wire.begin();
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  WiFi.config(ip, gateway, subnet);

  Serial.println("IP Address: ");
  Serial.println(WiFi.localIP());
  server.begin();
  Serial.println("Server started.");
}

void loop() {
  Wire.beginTransmission(0x38);
  Wire.write(byte(0x03));
  Wire.write(byte(0b01111111));
  Wire.endTransmission();

  Wire.beginTransmission(0x36);
  Wire.write(byte(0xA2));
  Wire.write(byte(0x03));
  Wire.endTransmission();

  WiFiClient client = server.available();
  if (client) {
    Serial.println("Client connected");

    tempsensor = readAnalogSensor(0);

    // Create JSON object
    DynamicJsonDocument jsonDoc(1024);
    jsonDoc["temp"] = tempsensor;

    // Serialize JSON to a string
    String jsonString;
    serializeJson(jsonDoc, jsonString);

    // Send JSON to the server
    client.println(jsonString);

    // Print JSON data
    Serial.println("Sent JSON data:");
    serializeJsonPretty(jsonDoc, Serial);

    client.flush();

    // Receive JSON data from the server
    String receivedData = client.readStringUntil('\r');
    Serial.println("Received JSON data from server:");
    Serial.println(receivedData);

    // Parse received JSON data
    DynamicJsonDocument receivedJsonDoc(1024);
    deserializeJson(receivedJsonDoc, receivedData);

    // Access the values from the received JSON document
    int piTemperature = receivedJsonDoc["temp"].as<int>();
    Serial.print("0 for off, 1 for on: ");
    Serial.println(piTemperature);
    Wire.beginTransmission(0x38);
    Wire.write(byte(0x03));
    if(piTemperature == 1){
      Serial.println("Zoemer on");
    Wire.write(byte(0b00001111));
    }
    Wire.endTransmission();
    delay(3000);
    client.stop();
    Serial.println("Client disconnected");
  }
    Wire.beginTransmission(0x38);
  Wire.write(byte(0x03));
  Wire.write(byte(0b00011111));
  Wire.endTransmission();
}

unsigned int readAnalogSensor(int ANALOG_CH) {
  unsigned int sensorValue0;
  unsigned int sensorValue1;
  Wire.requestFrom(0x36, 4);
  // Lees MAX11647

  if (ANALOG_CH == 0) {
    sensorValue0 = Wire.read() & 0x03;
    sensorValue0 = sensorValue0 << 8;
    sensorValue0 = sensorValue0 | Wire.read();
    return sensorValue0;
  }
  if (ANALOG_CH == 1) {
    Wire.read();
    Wire.read();
    sensorValue1 = Wire.read() & 0x03;
    sensorValue1 = sensorValue1 << 8;
    sensorValue1 = sensorValue1 | Wire.read();
    return sensorValue1;
  }
  return 0;
}
